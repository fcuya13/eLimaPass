name: Functional Tests

on:
  push:
    branches:
      - release
  repository_dispatch:
    types: [backend-updated]
  workflow_call:

  workflow_dispatch:



jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports: [ 5432:5432 ]
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: elimapass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.0

      - name: Install dependencies
        run: flutter pub get

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          timeout 60s bash -c 'until pg_isready -h localhost -p 5432 -U testuser; do sleep 2; done'

      - name: Start backend service
        run: |
          docker run -d \
            --name backend \
            --network host \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/elimapass \
            -e SPRING_DATASOURCE_USERNAME=testuser \
            -e SPRING_DATASOURCE_PASSWORD=testpass \
            -e SPRING_PROFILES_ACTIVE=prod \
            ghcr.io/fcuya13/elimapass-spring:latest

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          timeout 120s bash -c 'until curl --fail http://localhost:8080/actuator/health; do sleep 5; done'

      - name: Run Dart functional tests
        run: flutter test test/functional_test

      - name: Cleanup
        if: always()
        run: docker stop backend || true